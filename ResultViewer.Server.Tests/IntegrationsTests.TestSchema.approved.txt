{
    "data": {
        "__schema": {
            "queryType": {
                "kind": "OBJECT",
                "name": "Query",
                "description": null
            },
            "mutationType": {
                "kind": "OBJECT",
                "name": "Mutation",
                "description": null
            },
            "directives": [
                {
                    "name": "skip",
                    "description": "Directs the executor to skip this field or fragment when the \u0060if\u0060 argument is true."
                },
                {
                    "name": "include",
                    "description": "Directs the executor to include this field or fragment only when the \u0060if\u0060 argument is true."
                },
                {
                    "name": "deprecated",
                    "description": "The @deprecated directive is used within the type system definition language to indicate deprecated portions of a GraphQL service\u2019s schema,such as deprecated fields on a type or deprecated enum values."
                },
                {
                    "name": "specifiedBy",
                    "description": "The \u0060@specifiedBy\u0060 directive is used within the type system definition language to provide a URL for specifying the behavior of custom scalar definitions."
                }
            ],
            "types": [
                {
                    "kind": "OBJECT",
                    "name": "__Directive",
                    "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL\u0027s execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor."
                },
                {
                    "kind": "ENUM",
                    "name": "__DirectiveLocation",
                    "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies."
                },
                {
                    "kind": "OBJECT",
                    "name": "__EnumValue",
                    "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string."
                },
                {
                    "kind": "OBJECT",
                    "name": "__Field",
                    "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type."
                },
                {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value."
                },
                {
                    "kind": "OBJECT",
                    "name": "__Schema",
                    "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations."
                },
                {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the \u0060__TypeKind\u0060 enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types."
                },
                {
                    "kind": "ENUM",
                    "name": "__TypeKind",
                    "description": "An enum describing what kind of type a given \u0060__Type\u0060 is."
                },
                {
                    "kind": "OBJECT",
                    "name": "LotRun",
                    "description": "Represents the type of the lot run."
                },
                {
                    "kind": "OBJECT",
                    "name": "WaferRun",
                    "description": "Represents the type of the wafer run."
                },
                {
                    "kind": "OBJECT",
                    "name": "RecipeRun",
                    "description": "Represents the type of the recipe run."
                },
                {
                    "kind": "OBJECT",
                    "name": "TestRecipeRun",
                    "description": "Represents the type of the test recipe run."
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "LotRunInput",
                    "description": "Represents the input to create and update for a result."
                },
                {
                    "kind": "OBJECT",
                    "name": "LotRunPayload",
                    "description": "Represents the payload to return for a created or updated lot run."
                },
                {
                    "kind": "OBJECT",
                    "name": "Measurement",
                    "description": "Represents the type of the measurement."
                },
                {
                    "kind": "OBJECT",
                    "name": "AROLMeasurement",
                    "description": "Represents the type of the arol measurement."
                },
                {
                    "kind": "OBJECT",
                    "name": "AROLAccuracy",
                    "description": "Represents the type of the arol accuracy."
                },
                {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "The \u0060String\u0060 scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."
                },
                {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "description": "The \u0060Boolean\u0060 scalar type represents \u0060true\u0060 or \u0060false\u0060."
                },
                {
                    "kind": "OBJECT",
                    "name": "Query",
                    "description": null
                },
                {
                    "kind": "OBJECT",
                    "name": "Mutation",
                    "description": null
                },
                {
                    "kind": "SCALAR",
                    "name": "UUID",
                    "description": null
                },
                {
                    "kind": "SCALAR",
                    "name": "Float",
                    "description": "The \u0060Float\u0060 scalar type represents signed double-precision fractional values as specified by [IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point)."
                },
                {
                    "kind": "SCALAR",
                    "name": "Decimal",
                    "description": "The built-in \u0060Decimal\u0060 scalar type."
                },
                {
                    "kind": "SCALAR",
                    "name": "Byte",
                    "description": "The \u0060Byte\u0060 scalar type represents non-fractional whole numeric values. Byte can represent values between 0 and 255."
                },
                {
                    "kind": "SCALAR",
                    "name": "Long",
                    "description": "The \u0060Long\u0060 scalar type represents non-fractional signed whole 64-bit numeric values. Long can represent values between -(2^63) and 2^63 - 1."
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "LotRunFilterInput",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "LotRunSortInput",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "WaferRunFilterInput",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "WaferRunSortInput",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "RecipeRunFilterInput",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "RecipeRunSortInput",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "TestRecipeRunFilterInput",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "TestRecipeRunSortInput",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "MeasurementFilterInput",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "AROLMeasurementFilterInput",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "AROLMeasurementSortInput",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "AROLAccuracyFilterInput",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "AROLAccuracySortInput",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "UuidOperationFilterInput",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "StringOperationFilterInput",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "FloatOperationFilterInput",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "DecimalOperationFilterInput",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "ByteOperationFilterInput",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "LongOperationFilterInput",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "ListFilterInputTypeOfWaferRunFilterInput",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "ListFilterInputTypeOfMeasurementFilterInput",
                    "description": null
                },
                {
                    "kind": "ENUM",
                    "name": "SortEnumType",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "ListByteOperationFilterInput",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "ListFilterInputTypeOfLotRunFilterInput",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "ListFilterInputTypeOfTestRecipeRunFilterInput",
                    "description": null
                },
                {
                    "kind": "INPUT_OBJECT",
                    "name": "MeasurementSortInput",
                    "description": null
                }
            ]
        }
    }
}